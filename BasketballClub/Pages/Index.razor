@page "/"
@inject DataService dataService
@inject NavigationManager nav

<DxGridLayout>
	<Rows>
		<DxGridLayoutRow />
	</Rows>
	<Columns>
		<DxGridLayoutColumn />
		<DxGridLayoutColumn />
	</Columns>
	<Items>
		<DxGridLayoutItem Row="0" Column="0">
			<Template>
				<DxGrid Data="@bulltinContents">
					<Columns>
						<DxGridDataColumn FieldName="Title" />
						<DxGridDataColumn FieldName="Author" />
						<DxGridDataColumn FieldName="Priority">
							<CellDisplayTemplate>
								@{
									int priority = (context.DataItem as BulltinContent).Priority;
									<div style="text-align:center">
										<DxButton Text="@GetPriorityString(priority)" RenderStyle="@GetPriorityRender(priority)" Enabled="false" />
									</div>
								}
							</CellDisplayTemplate>
						</DxGridDataColumn>
						<DxGridDataColumn FieldName="Id" Caption="Detail">
							<CellDisplayTemplate>
								@{
									string id = (context.DataItem as BulltinContent).Id;
									<div style="text-align:center">
										<DxButton Click="@(async ()=>{await GetActivityByID(id);})" RenderStyle="ButtonRenderStyle.Info" CssClass="oi oi-magnifying-glass"></DxButton>
									</div>
								}
							</CellDisplayTemplate>
						</DxGridDataColumn>
					</Columns>
				</DxGrid>
			</Template>
		</DxGridLayoutItem>
		<DxGridLayoutItem Row="0" Column="1">
		</DxGridLayoutItem>
	</Items>
</DxGridLayout>



@code {
	private IEnumerable<BulltinContent> bulltinContents;
	private BulltinContent currentBulltinContent;

	protected override async Task OnInitializedAsync()
	{
		bulltinContents = await dataService.GetAllActivities();
	}

	private async Task GetActivityByID(string id)
	{
		nav.NavigateTo("/BulltinContentDetail/" + id);
	}

	private string GetPriorityString(int p)
	{
		string res = "";
		switch (p)
		{
			case 0:
				res = "High";
				break;
			case 1:
				res = "Medium";
				break;
			case 2:
				res = "Low";
				break;
			default:
				res = "Unknow";
				break;
		}
		return res;
	}

	private ButtonRenderStyle GetPriorityRender(int p)
	{
		ButtonRenderStyle res;
		switch (p)
		{
			case 0:
				res = ButtonRenderStyle.Danger;
				break;
			case 1:
				res = ButtonRenderStyle.Warning;
				break;
			case 2:
				res = ButtonRenderStyle.Success;
				break;
			default:
				res = ButtonRenderStyle.Secondary;
				break;
		}
		return res;
	}
}